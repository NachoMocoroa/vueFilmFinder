{"remainingRequest":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/babel-loader/lib/index.js!/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imocoroaperales/Desktop/Proyectos/VueChat/src/components/ForoChat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/src/components/ForoChat.vue","mtime":1547016892517},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ChatList from './ChatList.vue';\nexport default {\n  name: 'ForoChat',\n  components: {\n    ChatList: ChatList\n  },\n  props: {\n    chat: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      chatContainer: null,\n      chatDataSelected: null,\n      chatObject: null\n    };\n  },\n  created: function created() {\n    this.chatContainer = this.chat;\n  },\n  mounted: function mounted() {\n    this.selectChat(0);\n  },\n  methods: {\n    onChange: function onChange(event) {\n      this.filterVal(event.target.value);\n    },\n    selectChat: function selectChat(param) {\n      this.chatDataSelected = this.chatContainer[param];\n      this.setSelected(param);\n      this.filterVal('latest');\n      var filterSelect = this.$refs.chatFilterSelect;\n\n      if (filterSelect) {\n        filterSelect.selectedIndex = 0;\n      }\n    },\n    setSelected: function setSelected(param) {\n      var itemsList = document.querySelectorAll('.chat-item'),\n          itemsListLength = itemsList.length;\n\n      for (var i = 0; i < itemsListLength; i++) {\n        itemsList[i].dataset.selected = false;\n      }\n\n      itemsList[param].dataset.selected = true;\n    },\n    filterVal: function filterVal(param) {\n      var paramVal = '';\n      var reverse = true;\n\n      switch (param) {\n        case 'latest':\n          reverse = true;\n          paramVal = 'id';\n          break;\n\n        case 'newest':\n          reverse = false;\n          paramVal = 'id';\n          break;\n\n        case 'best':\n          reverse = false;\n          paramVal = 'valoration';\n          break;\n\n        case 'worst':\n          reverse = true;\n          paramVal = 'valoration';\n          break;\n\n        default:\n          // eslint-disable-next-line\n          console.log('No data: ', param);\n      }\n\n      this.chatObject = {\n        \"filter\": paramVal,\n        \"reverse\": reverse,\n        \"chat\": this.chatDataSelected\n      };\n    }\n  }\n};",{"version":3,"sources":["ForoChat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,QAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA;AADA,GALA;AAaA,EAAA,IAbA,kBAaA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,gBAAA,EAAA,IAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAKA,GAnBA;AAoBA,EAAA,OApBA,qBAoBA;AACA,SAAA,aAAA,GAAA,KAAA,IAAA;AACA,GAtBA;AAuBA,EAAA,OAvBA,qBAuBA;AACA,SAAA,UAAA,CAAA,CAAA;AACA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,KADA,EACA;AACA,WAAA,SAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,UAJA,sBAIA,KAJA,EAIA;AACA,WAAA,gBAAA,GAAA,KAAA,aAAA,CAAA,KAAA,CAAA;AACA,WAAA,WAAA,CAAA,KAAA;AACA,WAAA,SAAA,CAAA,QAAA;AACA,UAAA,YAAA,GAAA,KAAA,KAAA,CAAA,gBAAA;;AACA,UAAA,YAAA,EAAA;AACA,QAAA,YAAA,CAAA,aAAA,GAAA,CAAA;AACA;AACA,KAZA;AAaA,IAAA,WAbA,uBAaA,KAbA,EAaA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,gBAAA,CAAA,YAAA,CAAA;AAAA,UACA,eAAA,GAAA,SAAA,CAAA,MADA;;AAGA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,eAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,SAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,QAAA,GAAA,KAAA;AACA;;AACA,MAAA,SAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AACA,KArBA;AAsBA,IAAA,SAtBA,qBAsBA,KAtBA,EAsBA;AACA,UAAA,QAAA,GAAA,EAAA;AACA,UAAA,OAAA,GAAA,IAAA;;AACA,cAAA,KAAA;AACA,aAAA,QAAA;AACA,UAAA,OAAA,GAAA,IAAA;AACA,UAAA,QAAA,GAAA,IAAA;AACA;;AACA,aAAA,QAAA;AACA,UAAA,OAAA,GAAA,KAAA;AACA,UAAA,QAAA,GAAA,IAAA;AACA;;AACA,aAAA,MAAA;AACA,UAAA,OAAA,GAAA,KAAA;AACA,UAAA,QAAA,GAAA,YAAA;AACA;;AACA,aAAA,OAAA;AACA,UAAA,OAAA,GAAA,IAAA;AACA,UAAA,QAAA,GAAA,YAAA;AACA;;AACA;AACA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,KAAA;AAnBA;;AAqBA,WAAA,UAAA,GAAA;AACA,kBAAA,QADA;AAEA,mBAAA,OAFA;AAGA,gBAAA,KAAA;AAHA,OAAA;AAKA;AAnDA;AA1BA,CAAA","sourcesContent":["<template>\n  <div class=\"wrapper-chat\">\n    <section class=\"chat-threads\">\n      <template v-if=\"chatContainer\">\n        <div class=\"chat-item\" \n        data-selected=\"false\"\n        v-for=\"(chatItem, index) in chatContainer\" \n        :key=\"index\"\n        @click=\"selectChat(index)\">{{ chatItem.threadName }}</div>\n      </template>\n      <template v-else>\n        <div>No data</div>\n      </template>\n    </section>\n    <section class=\"chat-display\">\n      <template v-if=\"chatDataSelected\">\n        <div class=\"chat-title\">{{ chatDataSelected.threadName }}</div>\n        <div class=\"chat-order\">\n          <span>Order from:</span>\n          <select ref=\"chatFilterSelect\" name=\"order-select\" class=\"chat-select\" @change=\"onChange\">\n            <option value=\"latest\">Latest</option>\n            <option value=\"newest\">Newest</option>\n            <option value=\"best\">Best</option>\n            <option value=\"worst\">Worst</option>\n          </select>\n        </div>\n        <ChatList :chat-data=\"chatObject\" />\n      </template>\n      <template v-else>\n        <div>No data</div>\n      </template>\n    </section>\n  </div>\n</template>\n\n<script>\nimport ChatList from './ChatList.vue';\n\nexport default {\n  name: 'ForoChat',\n  components: {\n    ChatList\n  },\n  props: {\n    chat: {\n      type: Array,\n      default: function () {\n        return []\n      }\n    }\n  },\n  data () {\n    return {\n      chatContainer: null,\n      chatDataSelected: null,\n      chatObject: null\n    }\n  },\n  created() {\n    this.chatContainer = this.chat;\n  },\n  mounted() {\n    this.selectChat(0);\n  },\n  methods: {\n    onChange(event) {\n      this.filterVal(event.target.value);\n    },\n    selectChat(param) {\n      this.chatDataSelected = this.chatContainer[param];\n      this.setSelected(param);\n      this.filterVal('latest');\n      let filterSelect = this.$refs.chatFilterSelect;\n      if (filterSelect) {\n        filterSelect.selectedIndex = 0;\n      }\n    },\n    setSelected(param) {\n      let itemsList = document.querySelectorAll('.chat-item'),\n        itemsListLength = itemsList.length;\n\n      for (let i = 0; i < itemsListLength; i++) {\n        itemsList[i].dataset.selected = false;\n      }\n      itemsList[param].dataset.selected = true;\n    },\n    filterVal(param) {\n      let paramVal = '';\n      let reverse = true;\n      switch (param) {\n        case 'latest':\n          reverse = true;\n          paramVal = 'id';\n          break;\n        case 'newest':\n          reverse = false;\n          paramVal = 'id';\n          break;\n        case 'best':\n          reverse = false;\n          paramVal = 'valoration';\n          break;\n        case 'worst':\n          reverse = true;\n          paramVal = 'valoration';\n          break;\n        default:\n          // eslint-disable-next-line\n          console.log('No data: ', param);\n      }\n      this.chatObject = {\n        \"filter\": paramVal,\n        \"reverse\": reverse,\n        \"chat\": this.chatDataSelected\n      };\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .wrapper-chat {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto 1fr;\n    @media screen and (min-width: 768px) {\n      grid-template-columns: 300px 1fr;\n      grid-template-rows: 1fr;\n    }\n    .chat-threads {\n      @media screen and (min-width: 768px) {\n        border-right: 1px solid var(--grey-normal);\n      }\n      .chat-item {\n        font-size: var(--font-subtitle);\n        border-bottom: 1px solid var(--grey-normal);\n        cursor: pointer;\n        &:last-child {\n          margin: 0;\n        }\n        &:hover {\n          background-color: var(--grey-light);\n          color: var(--white-light);\n        }\n        &[data-selected=\"true\"] {\n          background-color: var(--outline-color);\n          color: var(--white-light);\n          font-weight: var(--weight-bold);\n          pointer-events: none;\n          cursor: default;\n        }\n      }\n    }\n    .chat-display {\n      display:flex;\n      flex-wrap:wrap;\n      .chat-title,\n      .chat-order {\n        background-color: var(--white-light);\n        padding: 5px 0 0 0;\n      }\n      .chat-title {\n        flex-basis: calc(100% - 200px);\n        font-size: var(--font-subtitle);\n        font-weight: var(--weight-bold);\n      }\n      .chat-order {\n        flex-basis: 200px;\n        text-align: right;\n        .chat-select {\n          margin: 0 10px 0 5px;\n        }\n      }\n    }\n  }\n</style>\n"],"sourceRoot":"src/components"}]}