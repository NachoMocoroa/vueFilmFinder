{"remainingRequest":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imocoroaperales/Desktop/Proyectos/VueChat/src/components/ChatList.vue?vue&type=style&index=0&id=9d5d1d74&lang=scss&scoped=true&","dependencies":[{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/src/components/ChatList.vue","mtime":1547016892516},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.chat-list-wrapper {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    color: var(--grey-regular);\n    background-color: var(--white-light);\n    .chat-list {\n        margin: 0;\n        padding: 5px 10px;\n        .chat-list-message {\n            display:flex;\n            flex-wrap:wrap;\n            margin: 0 0 5px 0;\n            padding: 0;\n            padding: 5px 10px;\n            background-color: var(--white-pure);\n            &:last-child {\n                margin: 0;\n                border-bottom: none;\n            }\n            .chat-list-message-author,\n            .chat-list-message-time {\n                flex-basis:calc(100% / 2);\n            }\n            .chat-list-message-author {\n                text-align: left;\n                font-weight: var(--weight-bold);\n            }\n            .chat-list-message-time {\n                text-align: right;\n                font-size: var(--font-litle);\n                color: var(--grey-normal);\n            }\n            .chat-list-message-text {\n                width: 100%;\n                margin-bottom: 5px;\n                text-align: left;\n            }\n            .chat-list-message-valoration {\n                width: 100%;\n                margin-bottom: 5px;\n                text-align: right;\n                font-size: var(--font-small);\n                color: var(--grey-normal);\n            }\n        }\n    }\n    .chat-pagination {\n        margin: 0;\n        padding: 5px 10px;\n    }\n}\n",{"version":3,"sources":["ChatList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"chat-list-wrapper\">\n        <div class=\"chat-list\">\n            <div class=\"chat-list-message\" \n            v-for=\"(chatMessage, index) in chatFiltered\" \n            :key=\"index\"\n            :id=\"chatInfo.threadID + chatMessage.id\"\n            :data-valoration=\"chatMessage.valoration\">\n                <div class=\"chat-list-message-author\">{{ filterIndex(chatMessage.id, index) }} - {{ chatMessage.authorName }} (ID: {{ chatMessage.id }})</div>\n                <div class=\"chat-list-message-time\">{{ chatMessage.timestamp }}</div>\n                <div class=\"chat-list-message-text\">{{ chatMessage.text }}</div>\n                <div class=\"chat-list-message-valoration\">Valoration: {{ chatMessage.valoration }}</div>\n            </div>\n        </div>\n        <div class=\"chat-pagination\">\n            <ChatPagination v-if=\"chatInfo.messages.length > maxMessages\" :pagination=\"chatObject\" @clicked=\"onClickChild\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport ChatPagination from './ChatPagination.vue';\n\nexport default {\n    name: 'ChatList',\n    components: {\n        ChatPagination\n    },\n    props: {\n        chatData: {\n            type: Object,\n            default: function () {\n                return {}\n            }\n        }\n    },\n    data () {\n        return {\n            chatObject: null,\n            chatFiltered: null,\n            chatFilter: '',\n            chatReverse: false,\n            maxMessages: 5,\n            chatPage: 0\n        }\n    },\n    created() {\n        this.assignVars(this.chatData);\n    },\n    mounted() {\n        this.filterChat();\n    },\n    methods: {\n        onClickChild (value) {\n            this.chatPage = value - 1;\n            this.updateChat(this.chatObject);\n        },\n        updateChat(param) {\n            this.assignVars(param);\n            this.filterChat();\n        },\n        assignVars(param) {\n            this.chatObject = param;\n            this.chatFilter = this.chatObject['filter'];\n            this.chatReverse = this.chatObject['reverse'];\n            this.chatInfo = this.chatObject['chat'];\n            this.chatObject.maxmessages = this.maxMessages;\n            this.chatObject.page = this.chatPage;\n        },\n        calculateChat(arr) {\n            const from = this.chatPage * this.maxMessages;\n            const to = from + this.maxMessages;\n            return arr.slice(from, to);\n        },\n        filterChat() {\n            const vm = this;\n            let tmpObj = this.chatInfo.messages;\n            tmpObj.sort(function(a, b) {\n                const filterA = vm.parseParam(a[vm.chatFilter]);\n                const filterB = vm.parseParam(b[vm.chatFilter]);\n                if (vm.chatReverse) {\n                    return (filterA > filterB) ? 1 : -1;\n                } else {\n                    return (filterA < filterB) ? 1 : -1;\n                }\n            });\n            this.chatFiltered = this.calculateChat(tmpObj);\n        },\n        filterIndex(identificator, iterator) {\n            if (this.chatFilter === 'valoration') {\n                return this.filterParam(iterator);\n            } else {\n                return this.parseParam(identificator);\n            }\n        },\n        parseParam(param) {\n            return parseInt(param.replace(/[^0-9]/g, ''), 10);\n        },\n        filterParam(param) {\n            return (this.chatPage * this.maxMessages) + param + 1;\n        }\n    },\n    watch: {\n        'chatData': function (newValue) {\n            this.updateChat(newValue);\n        },\n        'chatFilter': function (newValue, oldValue) {\n            if(newValue !== oldValue) {\n                this.chatPage = 0;\n                this.updateChat(this.chatObject);\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .chat-list-wrapper {\n        width: 100%;\n        margin: 0;\n        padding: 0;\n        color: var(--grey-regular);\n        background-color: var(--white-light);\n        .chat-list {\n            margin: 0;\n            padding: 5px 10px;\n            .chat-list-message {\n                display:flex;\n                flex-wrap:wrap;\n                margin: 0 0 5px 0;\n                padding: 0;\n                padding: 5px 10px;\n                background-color: var(--white-pure);\n                &:last-child {\n                    margin: 0;\n                    border-bottom: none;\n                }\n                .chat-list-message-author,\n                .chat-list-message-time {\n                    flex-basis:calc(100% / 2);\n                }\n                .chat-list-message-author {\n                    text-align: left;\n                    font-weight: var(--weight-bold);\n                }\n                .chat-list-message-time {\n                    text-align: right;\n                    font-size: var(--font-litle);\n                    color: var(--grey-normal);\n                }\n                .chat-list-message-text {\n                    width: 100%;\n                    margin-bottom: 5px;\n                    text-align: left;\n                }\n                .chat-list-message-valoration {\n                    width: 100%;\n                    margin-bottom: 5px;\n                    text-align: right;\n                    font-size: var(--font-small);\n                    color: var(--grey-normal);\n                }\n            }\n        }\n        .chat-pagination {\n            margin: 0;\n            padding: 5px 10px;\n        }\n    }\n</style>\n"]}]}