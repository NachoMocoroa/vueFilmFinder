{"remainingRequest":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/babel-loader/lib/index.js!/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imocoroaperales/Desktop/Proyectos/VueChat/src/components/ChatList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/src/components/ChatList.vue","mtime":1547016892516},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ChatPagination from './ChatPagination.vue';\nexport default {\n  name: 'ChatList',\n  components: {\n    ChatPagination: ChatPagination\n  },\n  props: {\n    chatData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      chatObject: null,\n      chatFiltered: null,\n      chatFilter: '',\n      chatReverse: false,\n      maxMessages: 5,\n      chatPage: 0\n    };\n  },\n  created: function created() {\n    this.assignVars(this.chatData);\n  },\n  mounted: function mounted() {\n    this.filterChat();\n  },\n  methods: {\n    onClickChild: function onClickChild(value) {\n      this.chatPage = value - 1;\n      this.updateChat(this.chatObject);\n    },\n    updateChat: function updateChat(param) {\n      this.assignVars(param);\n      this.filterChat();\n    },\n    assignVars: function assignVars(param) {\n      this.chatObject = param;\n      this.chatFilter = this.chatObject['filter'];\n      this.chatReverse = this.chatObject['reverse'];\n      this.chatInfo = this.chatObject['chat'];\n      this.chatObject.maxmessages = this.maxMessages;\n      this.chatObject.page = this.chatPage;\n    },\n    calculateChat: function calculateChat(arr) {\n      var from = this.chatPage * this.maxMessages;\n      var to = from + this.maxMessages;\n      return arr.slice(from, to);\n    },\n    filterChat: function filterChat() {\n      var vm = this;\n      var tmpObj = this.chatInfo.messages;\n      tmpObj.sort(function (a, b) {\n        var filterA = vm.parseParam(a[vm.chatFilter]);\n        var filterB = vm.parseParam(b[vm.chatFilter]);\n\n        if (vm.chatReverse) {\n          return filterA > filterB ? 1 : -1;\n        } else {\n          return filterA < filterB ? 1 : -1;\n        }\n      });\n      this.chatFiltered = this.calculateChat(tmpObj);\n    },\n    filterIndex: function filterIndex(identificator, iterator) {\n      if (this.chatFilter === 'valoration') {\n        return this.filterParam(iterator);\n      } else {\n        return this.parseParam(identificator);\n      }\n    },\n    parseParam: function parseParam(param) {\n      return parseInt(param.replace(/[^0-9]/g, ''), 10);\n    },\n    filterParam: function filterParam(param) {\n      return this.chatPage * this.maxMessages + param + 1;\n    }\n  },\n  watch: {\n    'chatData': function chatData(newValue) {\n      this.updateChat(newValue);\n    },\n    'chatFilter': function chatFilter(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.chatPage = 0;\n        this.updateChat(this.chatObject);\n      }\n    }\n  }\n};",{"version":3,"sources":["ChatList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"chat-list-wrapper\">\n        <div class=\"chat-list\">\n            <div class=\"chat-list-message\" \n            v-for=\"(chatMessage, index) in chatFiltered\" \n            :key=\"index\"\n            :id=\"chatInfo.threadID + chatMessage.id\"\n            :data-valoration=\"chatMessage.valoration\">\n                <div class=\"chat-list-message-author\">{{ filterIndex(chatMessage.id, index) }} - {{ chatMessage.authorName }} (ID: {{ chatMessage.id }})</div>\n                <div class=\"chat-list-message-time\">{{ chatMessage.timestamp }}</div>\n                <div class=\"chat-list-message-text\">{{ chatMessage.text }}</div>\n                <div class=\"chat-list-message-valoration\">Valoration: {{ chatMessage.valoration }}</div>\n            </div>\n        </div>\n        <div class=\"chat-pagination\">\n            <ChatPagination v-if=\"chatInfo.messages.length > maxMessages\" :pagination=\"chatObject\" @clicked=\"onClickChild\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport ChatPagination from './ChatPagination.vue';\n\nexport default {\n    name: 'ChatList',\n    components: {\n        ChatPagination\n    },\n    props: {\n        chatData: {\n            type: Object,\n            default: function () {\n                return {}\n            }\n        }\n    },\n    data () {\n        return {\n            chatObject: null,\n            chatFiltered: null,\n            chatFilter: '',\n            chatReverse: false,\n            maxMessages: 5,\n            chatPage: 0\n        }\n    },\n    created() {\n        this.assignVars(this.chatData);\n    },\n    mounted() {\n        this.filterChat();\n    },\n    methods: {\n        onClickChild (value) {\n            this.chatPage = value - 1;\n            this.updateChat(this.chatObject);\n        },\n        updateChat(param) {\n            this.assignVars(param);\n            this.filterChat();\n        },\n        assignVars(param) {\n            this.chatObject = param;\n            this.chatFilter = this.chatObject['filter'];\n            this.chatReverse = this.chatObject['reverse'];\n            this.chatInfo = this.chatObject['chat'];\n            this.chatObject.maxmessages = this.maxMessages;\n            this.chatObject.page = this.chatPage;\n        },\n        calculateChat(arr) {\n            const from = this.chatPage * this.maxMessages;\n            const to = from + this.maxMessages;\n            return arr.slice(from, to);\n        },\n        filterChat() {\n            const vm = this;\n            let tmpObj = this.chatInfo.messages;\n            tmpObj.sort(function(a, b) {\n                const filterA = vm.parseParam(a[vm.chatFilter]);\n                const filterB = vm.parseParam(b[vm.chatFilter]);\n                if (vm.chatReverse) {\n                    return (filterA > filterB) ? 1 : -1;\n                } else {\n                    return (filterA < filterB) ? 1 : -1;\n                }\n            });\n            this.chatFiltered = this.calculateChat(tmpObj);\n        },\n        filterIndex(identificator, iterator) {\n            if (this.chatFilter === 'valoration') {\n                return this.filterParam(iterator);\n            } else {\n                return this.parseParam(identificator);\n            }\n        },\n        parseParam(param) {\n            return parseInt(param.replace(/[^0-9]/g, ''), 10);\n        },\n        filterParam(param) {\n            return (this.chatPage * this.maxMessages) + param + 1;\n        }\n    },\n    watch: {\n        'chatData': function (newValue) {\n            this.updateChat(newValue);\n        },\n        'chatFilter': function (newValue, oldValue) {\n            if(newValue !== oldValue) {\n                this.chatPage = 0;\n                this.updateChat(this.chatObject);\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .chat-list-wrapper {\n        width: 100%;\n        margin: 0;\n        padding: 0;\n        color: var(--grey-regular);\n        background-color: var(--white-light);\n        .chat-list {\n            margin: 0;\n            padding: 5px 10px;\n            .chat-list-message {\n                display:flex;\n                flex-wrap:wrap;\n                margin: 0 0 5px 0;\n                padding: 0;\n                padding: 5px 10px;\n                background-color: var(--white-pure);\n                &:last-child {\n                    margin: 0;\n                    border-bottom: none;\n                }\n                .chat-list-message-author,\n                .chat-list-message-time {\n                    flex-basis:calc(100% / 2);\n                }\n                .chat-list-message-author {\n                    text-align: left;\n                    font-weight: var(--weight-bold);\n                }\n                .chat-list-message-time {\n                    text-align: right;\n                    font-size: var(--font-litle);\n                    color: var(--grey-normal);\n                }\n                .chat-list-message-text {\n                    width: 100%;\n                    margin-bottom: 5px;\n                    text-align: left;\n                }\n                .chat-list-message-valoration {\n                    width: 100%;\n                    margin-bottom: 5px;\n                    text-align: right;\n                    font-size: var(--font-small);\n                    color: var(--grey-normal);\n                }\n            }\n        }\n        .chat-pagination {\n            margin: 0;\n            padding: 5px 10px;\n        }\n    }\n</style>\n"],"sourceRoot":"src/components"}]}