{"remainingRequest":"/Users/imocoroaperales/Desktop/Proyectos/vue-film-finder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imocoroaperales/Desktop/Proyectos/vue-film-finder/src/components/SearchPagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/imocoroaperales/Desktop/Proyectos/vue-film-finder/src/components/SearchPagination.vue","mtime":1547043082253},{"path":"/Users/imocoroaperales/Desktop/Proyectos/vue-film-finder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/vue-film-finder/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/vue-film-finder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/vue-film-finder/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport EventBus from '../bus';\n\nexport default {\n  name: 'SearchPagination',\n  data () {\n    return {\n      totalResults: null,\n      pages: [],\n      page: 1,\n      isPagination: false,\n      maxPages: 10,\n      paginationActivated: false,\n      totalPages: null,\n      paginationButtons: null,\n      pointInit: false,\n      pointEnd: false,\n      minimumInit: 3,\n      lessClick: false,\n      plusClick: false\n    }\n  },\n  mounted() {\n    EventBus.$on('send-data', (param) => {\n      this.setBus(param);\n    });\n  },\n  methods: {\n    setBus(param) {\n      if (param.data !== null && param.data !== undefined) {\n        const dataJson = JSON.parse(param.data);\n        this.totalResults = dataJson.totalResults;\n        if (this.totalResults !== null && this.totalResults !== undefined) {\n          this.pages = dataJson.Search;\n          this.page = param.page;\n          this.filterPagination();\n        } else {\n          // eslint-disable-next-line\n          console.log('Data fail: ', this.totalResults);\n        }\n      }\n    },\n    resetClick() {\n      let itemsNumbers = document.querySelectorAll('.btn-pagination-number');\n      for (let i = 0; i < itemsNumbers.length; i++) {\n        itemsNumbers[i].dataset.selected = false;\n      }\n    },\n    numberWithDotMiles(num) {\n      if (num !== null && num !== undefined) {\n        return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n      }\n    },\n    stringOfPages(num) {\n      return num > 0 && num < 2 ? 'page' : 'pages';\n    },\n    setPointState() {\n      const limitInit = this.minimumInit + 3;\n      const limitEnd = this.totalPages - (this.minimumInit + 1);\n      (this.page >= limitInit) ? this.pointInit = true : this.pointInit = false;\n      (this.page >= limitEnd) ? this.pointEnd = false : this.pointEnd = true;\n      this.configPagination();\n    },\n    configPagination() {\n      const vm = this;\n      let timerClick = null,\n        posInit = this.minimumInit + 3,\n        posEnd = vm.totalPages - 4,\n        refInit = vm.page - 3,\n        refEnd = vm.maxPages - 3,\n        actualPage = vm.page - 1;\n\n      timerClick = window.setTimeout(function() {\n        vm.resetClick();\n        if (vm.page < posInit) {\n          refInit = 1;\n          refEnd = refEnd - 1;\n        } else if (vm.page >= posInit && vm.page < posEnd) {\n          refEnd = vm.page + 2;\n          actualPage = Math.ceil((refEnd - refInit) / 2);\n        } else {\n          refInit = vm.totalPages - 7;\n          refEnd = vm.totalPages;\n          actualPage = vm.page - refInit;\n        }\n        vm.paginationButtons = vm.setPaginationButtons(refInit, refEnd);\n        vm.setButtonActive(actualPage);\n        window.clearTimeout(timerClick);\n      }, 100);\n    },\n    setButtonActive(param) {\n      let timerOut = null;\n      timerOut = window.setTimeout(function() {\n        document.querySelectorAll('.btn-pagination-number')[param].dataset.selected = true;\n        window.clearTimeout(timerOut);\n      }, 50);\n    },\n    setSimplePagination() {\n      this.isPagination = false;\n      this.paginationActivated = false;\n    },\n    setMultiplePagination() {\n      this.isPagination = true;\n      this.totalPages >= this.maxPages ? this.paginationActivated = true : this.paginationActivated = false;\n      this.paginationActivated ? this.setPointState() : this.paginationButtons = this.setPaginationButtons(1, this.totalPages);\n    },\n    filterPagination() {\n      let pagesRounded = Math.ceil(this.totalResults / this.maxPages);\n      this.totalPages = pagesRounded;\n      if (this.totalPages === 1) {\n        this.setSimplePagination();\n      } else if (this.totalPages > 1) {\n        this.setMultiplePagination();\n      }\n    },\n    setPaginationButtons(f, t) {\n      let temporalArray = [];\n      for (let i = f; i < t; i++) {\n        temporalArray.push({ \"number\": (i + 1) });\n      }\n      return temporalArray;\n    },\n    pageSelected(e) {\n      this.page = parseInt(e.target.dataset.iterator, 10);\n      EventBus.$emit('pagination-data', this.page);\n    },\n    prev() {\n      let step = this.page;\n      step--;\n      this.plusClick = false;\n      if (step < 1) {\n        this.page = 1;\n        this.lessClick = true;\n      } else {\n        this.page = step;\n        this.lessClick = false;\n      }\n      EventBus.$emit('pagination-data', this.page);\n    },\n    next() {\n      let step = this.page;\n      step++;\n      this.lessClick = false;\n      if (step > this.totalPages) {\n        this.page = this.totalPages;\n        this.plusClick = true;\n      } else {\n        this.page = step;\n        this.plusClick = false;\n      }\n      EventBus.$emit('pagination-data', this.page);\n    }\n  }\n}\n",{"version":3,"sources":["SearchPagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchPagination.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"search-container\">\n    <template v-if=\"totalResults !== null && totalResults !== undefined\">\n      <div class=\"results-data\">\n        <p class=\"display-results\">\n          <span class=\"outstanding\">{{ numberWithDotMiles(totalResults) }}</span> results in <span class=\"outstanding\">{{ numberWithDotMiles(totalPages) }}</span> {{stringOfPages(totalPages)}}\n        </p>\n        <p class=\"display-results\">\n          <span class=\"outstanding\">{{ page }}</span> of <span class=\"outstanding\">{{ numberWithDotMiles(totalPages) }}</span>\n        </p>\n      </div>\n      <template v-if=\"isPagination\">\n        <div class=\"results-buttons\">\n          <template v-if=\"paginationActivated\">\n            <span class=\"btn-pagination_previous\"\n            :class=\"{'events-none': lessClick}\"\n            @click=\"prev\"></span>\n          </template>\n          <div class=\"pagination-numbers\">\n            <span class=\"btn-pagination-number\"\n            @click=\"pageSelected\"\n            :data-iterator=\"1\"\n            data-selected=\"true\">1</span>\n            <template v-if=\"paginationActivated && pointInit\">\n              <i class=\"btn-pagination-ellipsis\"\n              data-disabled>...</i>\n            </template>\n            <div class=\"pagination-numbers-wrapper\">\n              <span class=\"btn-pagination-number\"\n              v-for=\"(button, index) in paginationButtons\"\n              :key=\"index\"\n              @click=\"pageSelected\"\n              :data-iterator=\"button.number\"\n              data-selected=\"false\">\n                {{ button.number }}\n              </span>\n            </div>\n            <template v-if=\"paginationActivated && pointEnd\">\n              <i class=\"btn-pagination-ellipsis\"\n              data-disabled>...</i>\n              <span class=\"btn-pagination-number\"\n              @click=\"pageSelected\"\n              :data-iterator=\"totalPages\">\n                {{numberWithDotMiles(totalPages)}}\n              </span>\n            </template>\n          </div>\n          <template v-if=\"paginationActivated\">\n            <span class=\"btn-pagination_next\"\n            :class=\"{'events-none': plusClick}\"\n            @click=\"next\"></span>\n          </template>\n        </div>\n      </template>\n    </template>\n  </div>\n</template>\n\n<script>\n  import EventBus from '../bus';\n\n  export default {\n    name: 'SearchPagination',\n    data () {\n      return {\n        totalResults: null,\n        pages: [],\n        page: 1,\n        isPagination: false,\n        maxPages: 10,\n        paginationActivated: false,\n        totalPages: null,\n        paginationButtons: null,\n        pointInit: false,\n        pointEnd: false,\n        minimumInit: 3,\n        lessClick: false,\n        plusClick: false\n      }\n    },\n    mounted() {\n      EventBus.$on('send-data', (param) => {\n        this.setBus(param);\n      });\n    },\n    methods: {\n      setBus(param) {\n        if (param.data !== null && param.data !== undefined) {\n          const dataJson = JSON.parse(param.data);\n          this.totalResults = dataJson.totalResults;\n          if (this.totalResults !== null && this.totalResults !== undefined) {\n            this.pages = dataJson.Search;\n            this.page = param.page;\n            this.filterPagination();\n          } else {\n            // eslint-disable-next-line\n            console.log('Data fail: ', this.totalResults);\n          }\n        }\n      },\n      resetClick() {\n        let itemsNumbers = document.querySelectorAll('.btn-pagination-number');\n        for (let i = 0; i < itemsNumbers.length; i++) {\n          itemsNumbers[i].dataset.selected = false;\n        }\n      },\n      numberWithDotMiles(num) {\n        if (num !== null && num !== undefined) {\n          return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n        }\n      },\n      stringOfPages(num) {\n        return num > 0 && num < 2 ? 'page' : 'pages';\n      },\n      setPointState() {\n        const limitInit = this.minimumInit + 3;\n        const limitEnd = this.totalPages - (this.minimumInit + 1);\n        (this.page >= limitInit) ? this.pointInit = true : this.pointInit = false;\n        (this.page >= limitEnd) ? this.pointEnd = false : this.pointEnd = true;\n        this.configPagination();\n      },\n      configPagination() {\n        const vm = this;\n        let timerClick = null,\n          posInit = this.minimumInit + 3,\n          posEnd = vm.totalPages - 4,\n          refInit = vm.page - 3,\n          refEnd = vm.maxPages - 3,\n          actualPage = vm.page - 1;\n\n        timerClick = window.setTimeout(function() {\n          vm.resetClick();\n          if (vm.page < posInit) {\n            refInit = 1;\n            refEnd = refEnd - 1;\n          } else if (vm.page >= posInit && vm.page < posEnd) {\n            refEnd = vm.page + 2;\n            actualPage = Math.ceil((refEnd - refInit) / 2);\n          } else {\n            refInit = vm.totalPages - 7;\n            refEnd = vm.totalPages;\n            actualPage = vm.page - refInit;\n          }\n          vm.paginationButtons = vm.setPaginationButtons(refInit, refEnd);\n          vm.setButtonActive(actualPage);\n          window.clearTimeout(timerClick);\n        }, 100);\n      },\n      setButtonActive(param) {\n        let timerOut = null;\n        timerOut = window.setTimeout(function() {\n          document.querySelectorAll('.btn-pagination-number')[param].dataset.selected = true;\n          window.clearTimeout(timerOut);\n        }, 50);\n      },\n      setSimplePagination() {\n        this.isPagination = false;\n        this.paginationActivated = false;\n      },\n      setMultiplePagination() {\n        this.isPagination = true;\n        this.totalPages >= this.maxPages ? this.paginationActivated = true : this.paginationActivated = false;\n        this.paginationActivated ? this.setPointState() : this.paginationButtons = this.setPaginationButtons(1, this.totalPages);\n      },\n      filterPagination() {\n        let pagesRounded = Math.ceil(this.totalResults / this.maxPages);\n        this.totalPages = pagesRounded;\n        if (this.totalPages === 1) {\n          this.setSimplePagination();\n        } else if (this.totalPages > 1) {\n          this.setMultiplePagination();\n        }\n      },\n      setPaginationButtons(f, t) {\n        let temporalArray = [];\n        for (let i = f; i < t; i++) {\n          temporalArray.push({ \"number\": (i + 1) });\n        }\n        return temporalArray;\n      },\n      pageSelected(e) {\n        this.page = parseInt(e.target.dataset.iterator, 10);\n        EventBus.$emit('pagination-data', this.page);\n      },\n      prev() {\n        let step = this.page;\n        step--;\n        this.plusClick = false;\n        if (step < 1) {\n          this.page = 1;\n          this.lessClick = true;\n        } else {\n          this.page = step;\n          this.lessClick = false;\n        }\n        EventBus.$emit('pagination-data', this.page);\n      },\n      next() {\n        let step = this.page;\n        step++;\n        this.lessClick = false;\n        if (step > this.totalPages) {\n          this.page = this.totalPages;\n          this.plusClick = true;\n        } else {\n          this.page = step;\n          this.plusClick = false;\n        }\n        EventBus.$emit('pagination-data', this.page);\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n  .search-container {\n    padding-top: 20px;\n    .results-data {\n      margin: 0 auto 30px auto;\n      width: max-content;\n      .display-results {\n        text-align: center;\n        font-size: var(--font-subtitle-small);\n        margin: 0;\n        padding: 0;\n        & .outstanding {\n          font-weight: var(--weight-bold);\n          color: var(--blue-normal);\n        }\n      }\n    }\n    .results-buttons {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      max-width: 354px;\n      margin: 0 auto;\n      padding: 20px 0 0 0;\n      span[class^=\"btn-pagination_\"] {\n        width: 30px;\n        height: 30px;\n        margin: 0 10px;\n        padding: 0;\n        border: 1px solid var(--grey-lighter);\n        border-radius: 50%;\n        background-image: var(--pagination-arrows);\n        background-repeat: no-repeat;\n        background-position: 0;\n        cursor: pointer;\n        & [data-disabled] {\n          pointer-events: none;\n          -webkit-opacity: 0.5;\n          opacity: 0.5;\n          cursor: default;\n        }\n      }\n\n      span.btn-pagination_previous {\n        margin-left: 0;\n        background-position: -15px 5px;\n      }\n      span.btn-pagination_next {\n        margin-right: 0;\n        background-position: -35px 5px;\n      }\n      span.btn-pagination_previous,\n      span.btn-pagination_next {\n        &.events-none {\n          pointer-events: none;\n          -webkit-opacity: 0.5;\n          opacity: 0.5;\n          cursor: default;\n        }\n      }\n\n      .pagination-numbers {\n        position: relative;\n        display: flex;\n        flex-direction: row;\n        overflow: hidden;\n        max-width: 270px;\n        margin: 0 auto;\n        .btn-pagination-number,\n        .btn-pagination-ellipsis {\n          display: inline-block;\n          width: 30px;\n          min-width: 30px;\n          height: 30px;\n          margin: 0;\n          padding: 0;\n          font-size: var(--font-small);\n          line-height: 30px;\n          text-align: center;\n          color: var(--grey-normal);\n          cursor: pointer;\n        }\n        .btn-pagination-number.events-none {\n          pointer-events: none;\n        }\n        .btn-pagination-number:hover {\n          color: var(--white);\n          background-color: var(--grey-normal);\n        }\n        .btn-pagination-number[data-selected=\"true\"] {\n          color: var(--white);\n          background-color: var(--blue-normal);\n          font-weight: var(--weight-bold);\n        }\n        .btn-pagination-ellipsis {\n          display: inline-block;\n          width: 30px;\n          min-width: 30px;\n          vertical-align: middle;\n          font-size: var(--font-subtitle);\n          cursor: default;\n          -webkit-user-select:none;\n          -moz-user-select:none;\n          -ms-user-select:none;\n          -o-user-select:none;\n          user-select:none;\n          & [data-disabled] {\n            display: none;\n          }\n        }\n      }\n    }\n  }\n</style>\n"]}]}