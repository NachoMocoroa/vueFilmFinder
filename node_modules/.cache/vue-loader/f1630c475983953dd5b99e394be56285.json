{"remainingRequest":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imocoroaperales/Desktop/Proyectos/VueChat/src/components/ChatPagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/src/components/ChatPagination.vue","mtime":1547016892517},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/imocoroaperales/Desktop/Proyectos/VueChat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'ChatPagination',\n    props: {\n        pagination: {\n            type: Object,\n            default: function () {\n                return {}\n            }\n        }\n    },\n    data () {\n        return {\n            paginationData: null,\n            totalPages: 0,\n            maxPages: 0,\n            page: 0\n        }\n    },\n    created() {\n        this.assignVars(this.pagination);\n    },\n    watch: {\n        pagination: function (newValue) {\n            this.assignVars(newValue);\n        },\n        page: function (newValue) {\n            if(newValue === 0) newValue = 1;\n            this.$emit('clicked', newValue);\n        }\n    },\n    methods: {\n        assignVars(param) {\n            this.paginationData = param;\n            this.totalPages = this.paginationData.chat.messages.length;\n            this.maxPages = this.paginationData.maxmessages;\n            this.page = parseInt(this.paginationData.page, 10);\n            let pagesRounded = Math.ceil(this.totalPages / this.maxPages);\n            this.totalPages = pagesRounded;\n        },\n        onPageChange(event) {\n            this.page = parseInt(event.target.value, 10);\n        },\n        numberWithDotMiles(num) {\n            if (num !== null && num !== undefined) {\n                return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n            }\n        },\n        stringOfPages(num) {\n            return num > 0 && num < 2 ? 'page' : 'pages';\n        },\n        filterPage(num) {\n            return num === 0 ? 1 : num;\n        }\n    }\n}\n",{"version":3,"sources":["ChatPagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatPagination.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"pagination-wrapper\">\n        <div class=\"chat-info\">\n            <span class=\"outstanding\">{{ filterPage(page) }}</span> \n            of <span class=\"outstanding\">{{ totalPages }}</span> {{stringOfPages(totalPages)}}\n            (<span class=\"outstanding\">{{ numberWithDotMiles(paginationData.chat.messages.length) }}</span> total messages)\n        </div>\n        <div class=\"chat-page\">\n            <span>Page:</span>\n            <select name=\"page-select\" class=\"chat-page-select\" @change=\"onPageChange\">\n                <option v-for=\"index in totalPages\" \n                :key=\"index\"\n                :value=\"index\"\n                :selected=\"page === index\">{{ index }}</option>\n            </select>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ChatPagination',\n    props: {\n        pagination: {\n            type: Object,\n            default: function () {\n                return {}\n            }\n        }\n    },\n    data () {\n        return {\n            paginationData: null,\n            totalPages: 0,\n            maxPages: 0,\n            page: 0\n        }\n    },\n    created() {\n        this.assignVars(this.pagination);\n    },\n    watch: {\n        pagination: function (newValue) {\n            this.assignVars(newValue);\n        },\n        page: function (newValue) {\n            if(newValue === 0) newValue = 1;\n            this.$emit('clicked', newValue);\n        }\n    },\n    methods: {\n        assignVars(param) {\n            this.paginationData = param;\n            this.totalPages = this.paginationData.chat.messages.length;\n            this.maxPages = this.paginationData.maxmessages;\n            this.page = parseInt(this.paginationData.page, 10);\n            let pagesRounded = Math.ceil(this.totalPages / this.maxPages);\n            this.totalPages = pagesRounded;\n        },\n        onPageChange(event) {\n            this.page = parseInt(event.target.value, 10);\n        },\n        numberWithDotMiles(num) {\n            if (num !== null && num !== undefined) {\n                return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n            }\n        },\n        stringOfPages(num) {\n            return num > 0 && num < 2 ? 'page' : 'pages';\n        },\n        filterPage(num) {\n            return num === 0 ? 1 : num;\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .pagination-wrapper {\n        display: grid;\n        grid-template-rows: 1fr;\n        grid-template-columns: 250px 1fr;\n        margin: 0;\n        padding: 0;\n        color: var(--grey-regular);\n        .chat-info {\n            text-align: left;\n        }\n        .chat-page {\n            text-align: right;\n            .chat-page-select {\n                margin: 0 0 0 5px;\n            }\n        }\n        .outstanding {\n            font-weight: var(--weight-bold);\n            color: var(--blue-normal);\n        }\n    }\n</style>\n"]}]}